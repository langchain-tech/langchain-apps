{
    "description": "Use ChatGPT Plugins within LangChain abstractions with GET and POST Tools",
    "nodes": [
        {
            "width": 300,
            "height": 278,
            "id": "aiPlugin_0",
            "position": {
                "x": 1086.2925487205378,
                "y": 84.92168014974317
            },
            "type": "customNode",
            "data": {
                "id": "aiPlugin_0",
                "label": "AI Plugin",
                "name": "aiPlugin",
                "type": "AIPlugin",
                "baseClasses": ["AIPlugin", "Tool"],
                "category": "Tools",
                "description": "Execute actions using ChatGPT Plugin Url",
                "inputParams": [
                    {
                        "label": "Plugin Url",
                        "name": "pluginUrl",
                        "type": "string",
                        "placeholder": "https://www.klarna.com/.well-known/ai-plugin.json"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "pluginUrl": "https://www.klarna.com/.well-known/ai-plugin.json"
                },
                "outputAnchors": [
                    {
                        "id": "aiPlugin_0-output-aiPlugin-AIPlugin|Tool",
                        "name": "aiPlugin",
                        "label": "AIPlugin",
                        "type": "AIPlugin | Tool"
                    }
                ],
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1086.2925487205378,
                "y": 84.92168014974317
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 251,
            "id": "requestsGet_0",
            "position": {
                "x": 761.713884489628,
                "y": 170.84830553778124
            },
            "type": "customNode",
            "data": {
                "id": "requestsGet_0",
                "label": "Requests Get",
                "name": "requestsGet",
                "type": "RequestsGet",
                "baseClasses": ["RequestsGet", "Tool", "StructuredTool", "BaseLangChain"],
                "category": "Tools",
                "description": "Execute HTTP GET requests",
                "inputParams": [
                    {
                        "label": "URL",
                        "name": "url",
                        "type": "string",
                        "description": "Agent will make call to this exact URL. If not specified, agent will try to figure out itself from AIPlugin if provided",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsGet_0-input-url-string"
                    },
                    {
                        "label": "Description",
                        "name": "description",
                        "type": "string",
                        "rows": 4,
                        "default": "A portal to the internet. Use this when you need to get specific content from a website. \nInput should be a  url (i.e. https://www.google.com). The output will be the text response of the GET request.",
                        "description": "Acts like a prompt to tell agent when it should use this tool",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsGet_0-input-description-string"
                    },
                    {
                        "label": "Headers",
                        "name": "headers",
                        "type": "json",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsGet_0-input-headers-json"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "url": "",
                    "description": "A portal to the internet. Use this when you need to get specific content from a website. \nInput should be a  url (i.e. https://www.google.com). The output will be the text response of the GET request.",
                    "headers": ""
                },
                "outputAnchors": [
                    {
                        "id": "requestsGet_0-output-requestsGet-RequestsGet|Tool|StructuredTool|BaseLangChain",
                        "name": "requestsGet",
                        "label": "RequestsGet",
                        "type": "RequestsGet | Tool | StructuredTool | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 761.713884489628,
                "y": 170.84830553778124
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 251,
            "id": "requestsPost_0",
            "position": {
                "x": 436.4125209312256,
                "y": 306.87715502984184
            },
            "type": "customNode",
            "data": {
                "id": "requestsPost_0",
                "label": "Requests Post",
                "name": "requestsPost",
                "type": "RequestsPost",
                "baseClasses": ["RequestsPost", "Tool", "StructuredTool", "BaseLangChain"],
                "category": "Tools",
                "description": "Execute HTTP POST requests",
                "inputParams": [
                    {
                        "label": "URL",
                        "name": "url",
                        "type": "string",
                        "description": "Agent will make call to this exact URL. If not specified, agent will try to figure out itself from AIPlugin if provided",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsPost_0-input-url-string"
                    },
                    {
                        "label": "Body",
                        "name": "body",
                        "type": "json",
                        "description": "JSON body for the POST request. If not specified, agent will try to figure out itself from AIPlugin if provided",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsPost_0-input-body-json"
                    },
                    {
                        "label": "Description",
                        "name": "description",
                        "type": "string",
                        "rows": 4,
                        "default": "Use this when you want to POST to a website.\nInput should be a json string with two keys: \"url\" and \"data\".\nThe value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \nkey-value pairs you want to POST to the url as a JSON body.\nBe careful to always use double quotes for strings in the json string\nThe output will be the text response of the POST request.",
                        "description": "Acts like a prompt to tell agent when it should use this tool",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsPost_0-input-description-string"
                    },
                    {
                        "label": "Headers",
                        "name": "headers",
                        "type": "json",
                        "additionalParams": true,
                        "optional": true,
                        "id": "requestsPost_0-input-headers-json"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "url": "",
                    "body": "",
                    "description": "Use this when you want to POST to a website.\nInput should be a json string with two keys: \"url\" and \"data\".\nThe value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \nkey-value pairs you want to POST to the url as a JSON body.\nBe careful to always use double quotes for strings in the json string\nThe output will be the text response of the POST request.",
                    "headers": ""
                },
                "outputAnchors": [
                    {
                        "id": "requestsPost_0-output-requestsPost-RequestsPost|Tool|StructuredTool|BaseLangChain",
                        "name": "requestsPost",
                        "label": "RequestsPost",
                        "type": "RequestsPost | Tool | StructuredTool | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 436.4125209312256,
                "y": 306.87715502984184
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 280,
            "id": "mrklAgentChat_0",
            "position": {
                "x": 1416.2054860029416,
                "y": 451.43299014109715
            },
            "type": "customNode",
            "data": {
                "id": "mrklAgentChat_0",
                "label": "MRKL Agent for Chat Models",
                "name": "mrklAgentChat",
                "type": "AgentExecutor",
                "baseClasses": ["AgentExecutor", "BaseChain", "BaseLangChain"],
                "category": "Agents",
                "description": "Agent that uses the ReAct Framework to decide what action to take, optimized to be used with Chat Models",
                "inputParams": [],
                "inputAnchors": [
                    {
                        "label": "Allowed Tools",
                        "name": "tools",
                        "type": "Tool",
                        "list": true,
                        "id": "mrklAgentChat_0-input-tools-Tool"
                    },
                    {
                        "label": "Language Model",
                        "name": "model",
                        "type": "BaseLanguageModel",
                        "id": "mrklAgentChat_0-input-model-BaseLanguageModel"
                    }
                ],
                "inputs": {
                    "tools": ["{{requestsGet_0.data.instance}}", "{{requestsPost_0.data.instance}}", "{{aiPlugin_0.data.instance}}"],
                    "model": "{{chatOpenAI_0.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "mrklAgentChat_0-output-mrklAgentChat-AgentExecutor|BaseChain|BaseLangChain",
                        "name": "mrklAgentChat",
                        "label": "AgentExecutor",
                        "type": "AgentExecutor | BaseChain | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1416.2054860029416,
                "y": 451.43299014109715
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 524,
            "id": "chatOpenAI_0",
            "position": {
                "x": 797.0574814814245,
                "y": 578.7641992971934
            },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": ["ChatOpenAI", "BaseChatModel", "BaseLanguageModel", "BaseLangChain"],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "chatOpenAI_0-input-openAIApiKey-password"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "options",
                        "options": [
                            {
                                "label": "gpt-4",
                                "name": "gpt-4"
                            },
                            {
                                "label": "gpt-4-0314",
                                "name": "gpt-4-0314"
                            },
                            {
                                "label": "gpt-4-32k-0314",
                                "name": "gpt-4-32k-0314"
                            },
                            {
                                "label": "gpt-3.5-turbo",
                                "name": "gpt-3.5-turbo"
                            },
                            {
                                "label": "gpt-3.5-turbo-0301",
                                "name": "gpt-3.5-turbo-0301"
                            }
                        ],
                        "default": "gpt-3.5-turbo",
                        "optional": true,
                        "id": "chatOpenAI_0-input-modelName-options"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "default": 0.9,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-topP-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-presencePenalty-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "gpt-3.5-turbo",
                    "temperature": 0.9,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 797.0574814814245,
                "y": 578.7641992971934
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "requestsGet_0",
            "sourceHandle": "requestsGet_0-output-requestsGet-RequestsGet|Tool|StructuredTool|BaseLangChain",
            "target": "mrklAgentChat_0",
            "targetHandle": "mrklAgentChat_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "requestsGet_0-requestsGet_0-output-requestsGet-RequestsGet|Tool|StructuredTool|BaseLangChain-mrklAgentChat_0-mrklAgentChat_0-input-tools-Tool",
            "data": {
                "label": ""
            }
        },
        {
            "source": "aiPlugin_0",
            "sourceHandle": "aiPlugin_0-output-aiPlugin-AIPlugin|Tool",
            "target": "mrklAgentChat_0",
            "targetHandle": "mrklAgentChat_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "aiPlugin_0-aiPlugin_0-output-aiPlugin-AIPlugin|Tool-mrklAgentChat_0-mrklAgentChat_0-input-tools-Tool",
            "data": {
                "label": ""
            }
        },
        {
            "source": "requestsPost_0",
            "sourceHandle": "requestsPost_0-output-requestsPost-RequestsPost|Tool|StructuredTool|BaseLangChain",
            "target": "mrklAgentChat_0",
            "targetHandle": "mrklAgentChat_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "requestsPost_0-requestsPost_0-output-requestsPost-RequestsPost|Tool|StructuredTool|BaseLangChain-mrklAgentChat_0-mrklAgentChat_0-input-tools-Tool",
            "data": {
                "label": ""
            }
        },
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain",
            "target": "mrklAgentChat_0",
            "targetHandle": "mrklAgentChat_0-input-model-BaseLanguageModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain-mrklAgentChat_0-mrklAgentChat_0-input-model-BaseLanguageModel",
            "data": {
                "label": ""
            }
        }
    ]
}
